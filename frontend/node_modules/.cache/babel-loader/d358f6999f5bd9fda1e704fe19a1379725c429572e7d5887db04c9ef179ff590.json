{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Table from './components/Table';\nimport Pagination from './components/Pagination';\nimport SearchBar from './components/SearchBar';\nimport SortOptions from './components/SortOptions';\n\nconst App = () => {\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [customersPerPage] = useState(20);\n\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      setLoading(true);\n      const res = await axios.get(`http://localhost:5000/api/customers?page=${currentPage}&limit=${customersPerPage}`);\n      setCustomers(res.data);\n      setLoading(false);\n    };\n\n    fetchCustomers();\n  }, [currentPage, customersPerPage]); \n\n  const searchCustomers = async (term) => {\n    setLoading(true);\n    const res = await axios.get(`http://localhost:5000/api/customers/search?term=${term}`);\n    setCustomers(res.data);\n    setLoading(false);\n  };\n\n  const sortCustomers = async (sortBy) => {\n    setLoading(true);\n    const res = await axios.get(`http://localhost:5000/api/customers/sort?by=${sortBy}`);\n    setCustomers(res.data);\n    setLoading(false);\n  };\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container'>\n      <h1>Customer Data</h1>\n      <SearchBar searchCustomers={searchCustomers} />\n      <SortOptions sortCustomers={sortCustomers}/>\n      <Table customers={customers} loading={loading} />\n      <Pagination\n        customersPerPage={customersPerPage}\n        totalCustomers={customers.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\n*/","map":{"version":3,"names":[],"sources":["G:/Node Js/Customer/frontend/src/App.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Table from './components/Table';\nimport Pagination from './components/Pagination';\nimport SearchBar from './components/SearchBar';\nimport SortOptions from './components/SortOptions';\n\nconst App = () => {\n  const [customers, setCustomers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [customersPerPage] = useState(20);\n\n  useEffect(() => {\n    const fetchCustomers = async () => {\n      setLoading(true);\n      const res = await axios.get(`http://localhost:5000/api/customers?page=${currentPage}&limit=${customersPerPage}`);\n      setCustomers(res.data);\n      setLoading(false);\n    };\n\n    fetchCustomers();\n  }, [currentPage, customersPerPage]); \n\n  const searchCustomers = async (term) => {\n    setLoading(true);\n    const res = await axios.get(`http://localhost:5000/api/customers/search?term=${term}`);\n    setCustomers(res.data);\n    setLoading(false);\n  };\n\n  const sortCustomers = async (sortBy) => {\n    setLoading(true);\n    const res = await axios.get(`http://localhost:5000/api/customers/sort?by=${sortBy}`);\n    setCustomers(res.data);\n    setLoading(false);\n  };\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className='container'>\n      <h1>Customer Data</h1>\n      <SearchBar searchCustomers={searchCustomers} />\n      <SortOptions sortCustomers={sortCustomers}/>\n      <Table customers={customers} loading={loading} />\n      <Pagination\n        customersPerPage={customersPerPage}\n        totalCustomers={customers.length}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default App;\n\n*/\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}