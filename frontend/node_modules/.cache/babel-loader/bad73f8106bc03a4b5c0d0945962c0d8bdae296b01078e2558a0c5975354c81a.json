{"ast":null,"code":"var _jsxFileName = \"G:\\\\Node Js\\\\Customer\\\\frontend\\\\src\\\\components\\\\Pagination.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  customersPerPage,\n  totalCustomers,\n  paginate\n}) => {\n  const pageNumbers = [];\n  for (let i = 1; i <= Math.ceil(totalCustomers / customersPerPage); i++) {\n    pageNumbers.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pageNumbers.map(number => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => paginate(number),\n          href: \"#!\",\n          className: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\n\n/*\r\nimport React from 'react';\r\n\r\nconst Pagination = ({ currentPage, totalCustomers, customersPerPage, onPageChange }) => {\r\n  const totalPages = Math.ceil(totalCustomers / customersPerPage);\r\n\r\n  const handleClick = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      onPageChange(pageNumber);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handleClick(currentPage - 1)}>Previous</button>\r\n      {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n        <button key={page} onClick={() => handleClick(page)}>\r\n          {page}\r\n        </button>\r\n      ))}\r\n      <button onClick={() => handleClick(currentPage + 1)}>Next</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Pagination","customersPerPage","totalCustomers","paginate","pageNumbers","i","Math","ceil","push","children","className","map","number","onClick","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/Node Js/Customer/frontend/src/components/Pagination.js"],"sourcesContent":["\r\nimport React from 'react';\r\n\r\nconst Pagination = ({ customersPerPage, totalCustomers, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalCustomers / customersPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className='pagination'>\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)} href='#!' className='page-link'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n/*\r\nimport React from 'react';\r\n\r\nconst Pagination = ({ currentPage, totalCustomers, customersPerPage, onPageChange }) => {\r\n  const totalPages = Math.ceil(totalCustomers / customersPerPage);\r\n\r\n  const handleClick = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      onPageChange(pageNumber);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handleClick(currentPage - 1)}>Previous</button>\r\n      {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n        <button key={page} onClick={() => handleClick(page)}>\r\n          {page}\r\n        </button>\r\n      ))}\r\n      <button onClick={() => handleClick(currentPage + 1)}>Next</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n*/\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,gBAAgB;EAAEC,cAAc;EAAEC;AAAS,CAAC,KAAK;EACrE,MAAMC,WAAW,GAAG,EAAE;EAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACL,cAAc,GAAGD,gBAAgB,CAAC,EAAEI,CAAC,EAAE,EAAE;IACtED,WAAW,CAACI,IAAI,CAACH,CAAC,CAAC;EACrB;EAEA,oBACEN,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAIW,SAAS,EAAC,YAAY;MAAAD,QAAA,EACvBL,WAAW,CAACO,GAAG,CAAEC,MAAM,iBACtBb,OAAA;QAAiBW,SAAS,EAAC,WAAW;QAAAD,QAAA,eACpCV,OAAA;UAAGc,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACS,MAAM,CAAE;UAACE,IAAI,EAAC,IAAI;UAACJ,SAAS,EAAC,WAAW;UAAAD,QAAA,EAChEG;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,GAHGN,MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACC,EAAA,GApBInB,UAAU;AAsBhB,eAAeA,UAAU;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}